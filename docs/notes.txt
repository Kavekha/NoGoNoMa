Load_raws
    Fusionner les raws pour ne pas les garder.
    Exemple: Table Raws oblige a chercher dans tous les raws pour determiner la table.
    Sanity checks: http://bfnightly.bracketproductions.com/rustbook/chapter_46.html

Identification:
    Couleur des parchos & potions non aleatoire.

Input:
    Recuperation des inputs dans le save pour le Replay.

AI:
    # /!\ On utilise visible_tiles, qui concerne ce que le mob voit = le transparent est consideré comme walkable.
    # /!\ Libtcod fonctionne en y,x et pas en x, y. Melange facile à faire, a ameliorer!
    Attiré par des items au sol.
    Eviter les NPC les uns dans les autres.

Tour par Tour:
    Foutoir dans les States & les run_systems.
    Parfois, deplacement vers un ennemi est consideré comme "didnt move" et aucune action (Vers la droite, avec ennemi a droite).

World:
    maintain :
        Gerer autrement les delete pour ne pas defoncer les iterators.
        On marque une entité comme "morte", et on l'efface en fin de cycle.

UI:
    API pour mieux gerer l'interface vs Game.
    Meilleure disposition des menus.


Map, visible tiles etc
    3 models : 1 en idx, 1 en xy et un en yx
    A uniformiser ou moyen de reduire erreur.
    (exemple: viewshed.visible_tiles est en yx)

Use:
    Fireball basé sur la visibilité de la cible, pas du joueur.
    Use system a refactor pour plus de lisibilité. Notamment le code equip / unequip, illisible.
    Items : Potion sans interdiction de boire alors que full pv.

Changer State
    Tjrs penible. cf damage_system pour changer l'etat de mort.

systems order

Inventory
    Si identification a l'equipement, on reste dans le menu pour voir ce que c'est.
    Afficher difference equippé vs equippé pour aider au choix.
